---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import { components } from "../components/markdown/components";
import { render } from "astro:content";
import type { CreativeWork, WithContext } from "schema-dts";
import { SITE } from "../consts";

interface Props {
  project: CollectionEntry<"projects">;
  next?: CollectionEntry<"projects">;
  prev?: CollectionEntry<"projects">;
}

const { project, next, prev } = Astro.props;

const { Content } = await render(project);

const jsonLd: WithContext<CreativeWork> = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  name: project.data.name,
  description: project.data.description,
  url: `${SITE}/projects/${project.data.slug}`,
  author: {
    "@type": "Person",
    name: "Pierre Guéroult",
    url: SITE,
  },
  datePublished: project.data.date.toLocaleDateString(),
  inLanguage: "en",
  keywords: project.data.technologies,
};
---

<Layout title={project.data.name} description={project.data.description}>
  <article class="mt-8 max-w-4xl">
    <Content components={{ ...components }} />
  </article>
  <footer class="py-8 flex items-center justify-between">
    {
      prev ? (
        <a href={`/projects/${prev.data.slug}`} class="text-accent">
          ← {prev.data.slug}
        </a>
      ) : (
        <div aria-hidden="true" />
      )
    }
    {
      next ? (
        <a href={`/projects/${next.data.slug}`} class="text-accent">
          {next.data.slug} →
        </a>
      ) : (
        <div aria-hidden="true" />
      )
    }
  </footer>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd, null, 0)} />
</Layout>
