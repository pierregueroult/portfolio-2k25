---
import { ClientRouter } from "astro:transitions";
import Header from "@/components/Header.astro";
import PostHog from "@/components/PostHog.astro";
import { LOCALES, SITE } from "@/consts";
import { getDir, getLocale } from "@/utils/get-locale";
import { removeTrailingSlash } from "@/utils/remove-trailing-slash";

import "../styles/global.css";

interface Props {
  title: string;
  description: string;
  keywords?: string[];
}
const { title, description, keywords } = Astro.props;
const { theme } = Astro.locals;

const defaultKeywords = [
  "web development",
  "frontend developer",
  "backend developer",
  "full-stack projects",
  "Astro framework",
  "JavaScript",
  "Typescript",
  "php",
  "Tailwind CSS",
  "GitHub portfolio",
  "Pierre Guéroult",
] as const;

const isBlogOrProject = /^\/(?:[a-z]{2})\/(projects|blog)\/[^/]+/.test(Astro.url.pathname);
const ogImage = ["home", "projects", "blog", "socials"].find((image) => Astro.originPathname.includes(image)) ?? "home";
const currentLocale = getLocale(Astro.params.lang);
const currentDir = getDir(Astro.params.lang);
const keywordsContent = keywords ? [...keywords, ...defaultKeywords].join(", ") : defaultKeywords.join(", ");
const ogImageUrl = `${SITE}/open-graph/banner-${ogImage}.png`;

const getAlternateLinks = () => {
  if (!isBlogOrProject) {
    const frHref = removeTrailingSlash(`/fr${Astro.originPathname.replace(`/${Astro.params.lang}`, "")}`);
    return [
      ...LOCALES.map((locale) => ({
        locale,
        href: removeTrailingSlash(`/${locale}${Astro.originPathname.replace(`/${Astro.params.lang}`, "")}`),
        isDefault: locale === "fr"
      })),
      { locale: "x-default", href: frHref, isDefault: false }
    ];
  }

  const href = removeTrailingSlash(`/en${Astro.originPathname.replace(`/${Astro.params.lang}`, "")}`);
  return [
    { locale: "en", href, isDefault: false },
    { locale: "x-default", href, isDefault: false }
  ];
};

const alternateLinks = getAlternateLinks();
---

<!doctype html>
<html lang={currentLocale} dir={currentDir}>
  <head>
    <title>{title}</title>
    <meta charset="utf-8" />
    <meta name="author" content="Pierre Guéroult" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <meta name="viewport" content="width=device-width" />
    <meta name="keywords" content={keywordsContent} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:site_name" content="Pierre Guéroult" />
    <meta property="og:locale" content={currentLocale} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageUrl} />
    <meta property="twitter:site" content="@pierregueroult1" />
    <meta property="twitter:creator" content="@pierregueroult1" />
    <meta name="robots" content="index, follow" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://eu.i.posthog.com" crossorigin="anonymous" />
    <link rel="preconnect" href="https://eu-assets.i.posthog.com" crossorigin="anonymous" />
    {alternateLinks.map(({ locale, href }) => (
      <link rel="alternate" hreflang={locale} href={href} />
    ))}
    <ClientRouter />
  </head>
  <body class="font-mono bg-background text-foreground" data-theme={theme}>
    <Header />
    <main class="mx-auto max-w-4xl w-full px-4 pb-8">
      <slot />
    </main>
    {import.meta.env.PROD && <PostHog />}
  </body>
</html>
