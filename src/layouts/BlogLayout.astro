---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import { components } from "../components/markdown/components";
import { render } from "astro:content";
import type { BlogPosting, WithContext } from "schema-dts";
import { SITE } from "../consts";

interface Props {
  post: CollectionEntry<"blog">;
  next?: CollectionEntry<"blog">;
  prev?: CollectionEntry<"blog">;
}

const { post, next, prev } = Astro.props;

const { Content } = await render(post);

const jsonLd: WithContext<BlogPosting> = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: post.data.title,
  description: post.data.summary,
  url: `${SITE}/en/blog/${post.data.slug}`,
  datePublished: post.data.date.toLocaleDateString(),
  author: {
    "@type": "Person",
    name: "Pierre Guéroult",
    url: SITE,
  },
  publisher: {
    "@type": "Organization",
    name: "Pierre Guéroult",
    logo: {
      "@type": "ImageObject",
      url: `${SITE}/favicon.svg`,
    },
  },
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": `${SITE}/en/blog/${post.data.slug}`,
  },
  keywords: post.data.tags,
};
---

<Layout title={post.data.title} description={post.data.summary}>
  <article class="mt-8 max-w-4xl" lang={"en"}>
    <Content components={{ ...components }} />
  </article>
  <footer class="py-8 flex items-center justify-between">
    {
      prev ? (
        <a href={`/blog/${prev.data.slug}`} class="text-accent">
          ← {prev.data.title}
        </a>
      ) : (
        <div aria-hidden="true" />
      )
    }
    {
      next ? (
        <a href={`/blog/${next.data.slug}`} class="text-accent">
          {next.data.title} →
        </a>
      ) : (
        <div aria-hidden="true" />
      )
    }
  </footer>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd, null, 0)} />
</Layout>
