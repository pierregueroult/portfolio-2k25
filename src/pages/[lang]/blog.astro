---
import BlogItem from "@/components/items/BlogItem.astro";
import TranslationAlert from "@/components/TranslationAlert.astro";
import { useTranslation } from "@/i18n";
import Layout from "@/layouts/Layout.astro";
import ListLayout from "@/layouts/ListLayout.astro";
import WithTitleLayout from "@/layouts/WithTitleLayout.astro";
import ApprenticeShipBanner from "@/components/ApprenticeShipBanner.astro";
import { excludeDrafts } from "@/utils/exclude-drafts";
import { getLocale } from "@/utils/get-locale";
import { getCollection } from "astro:content";

const postsList = await getCollection("blog");

const posts = postsList.filter(excludeDrafts).sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

const t = useTranslation(getLocale(Astro.params.lang));
---

<Layout
  title={t("pages.blog.meta.title")}
  description={t("pages.blog.meta.description")}
  keywords={t("pages.blog.meta.keywords").split(", ")}
>
  <WithTitleLayout title={t("pages.blog.title")} subtitle={t("pages.blog.subtitle")}>
    <ApprenticeShipBanner />
    {
      getLocale(Astro.params.lang) !== "en" && (
        <TranslationAlert title={t("pages.blog.translation.title")} text={t("pages.blog.translation.text")} />
      )
    }
    <ListLayout title={t("pages.blog.articles")}>
      {
        posts.map((post) => (
          <BlogItem
            title={post.data.title}
            slug={post.data.slug}
            summary={post.data.summary}
            date={post.data.date}
            tags={post.data.tags}
          />
        ))
      }
    </ListLayout>
  </WithTitleLayout>
</Layout>
