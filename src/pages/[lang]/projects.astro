---
import { getCollection } from "astro:content";
import ProjectItem from "@/components/items/ProjectItem.astro";
import Layout from "@/layouts/Layout.astro";
import ListLayout from "@/layouts/ListLayout.astro";
import WithTitleLayout from "@/layouts/WithTitleLayout.astro";
import { useTranslation } from "@/i18n";
import TranslationAlert from "@/components/TranslationAlert.astro";
import { getLocale } from "@/utils/get-locale";

const allProjects = await getCollection("projects");

const projects = allProjects.filter((project) => project.data.kind === "project");
const schools = allProjects.filter((project) => project.data.kind === "school");
const creations = allProjects.filter((project) => project.data.kind === "creation");
const contributions = allProjects.filter((project) => project.data.kind === "contribution");

const t = useTranslation(getLocale(Astro.params.lang));
---

<Layout
  title={t("pages.projects.meta.title")}
  description={t("pages.projects.meta.description")}
  keywords={t("pages.projects.meta.keywords").split(", ")}
>
  <WithTitleLayout title={t("pages.projects.title")} subtitle={t("pages.projects.subtitle")}>
    {
      getLocale(Astro.params.lang) !== "en" && (
        <TranslationAlert title={t("pages.projects.translation.title")} text={t("pages.projects.translation.text")} />
      )
    }
    {
      creations.length > 0 && (
        <ListLayout title={t("pages.projects.creations")}>
          {creations.map((project) => (
            <ProjectItem
              title={project.data.name}
              subtitle={project.data.role}
              text={project.data.description}
              slug={project.data.slug}
            />
          ))}
        </ListLayout>
      )
    }
    {
      projects.length > 0 && (
        <ListLayout title={t("pages.projects.projects")}>
          {projects.map((project) => (
            <ProjectItem
              title={project.data.name}
              subtitle={project.data.role}
              text={project.data.description}
              slug={project.data.slug}
            />
          ))}
        </ListLayout>
      )
    }
    {
      schools.length > 0 && (
        <ListLayout title={t("pages.projects.schools")}>
          {schools.map((project) => (
            <ProjectItem
              title={project.data.name}
              subtitle={project.data.role}
              text={project.data.description}
              slug={project.data.slug}
            />
          ))}
        </ListLayout>
      )
    }
    {
      contributions.length > 0 && (
        <ListLayout title={t("pages.projects.contributions")}>
          {contributions.map((project) => (
            <ProjectItem
              title={project.data.name}
              subtitle={project.data.role}
              text={project.data.description}
              slug={project.data.slug}
            />
          ))}
        </ListLayout>
      )
    }
  </WithTitleLayout>
</Layout>
