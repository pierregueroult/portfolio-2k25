---
import Layout from "../layouts/Layout.astro";
import Title from "../components/Title.astro";
import type { Person, WithContext } from "schema-dts";
import ListLayout from "../layouts/ListLayout.astro";
import { getCollection } from "astro:content";
import WorkItem from "../components/items/WorkItem.astro";
import SchoolItem from "../components/items/SchoolItem.astro";
import { SITE } from "../consts";

const jsonLd: WithContext<Person> = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Pierre Guéroult",
  url: SITE,
  image: "TODO",
  jobTitle: "Software Developer Junior & CS Student",
  nationality: "French",
  address: {
    "@type": "PostalAddress",
    addressLocality: "Paris",
    addressRegion: "Île-de-France",
    addressCountry: "France",
  },
  alumniOf: {
    "@type": "CollegeOrUniversity",
    name: "IUT de Rouen",
  },
  email: "contact@pierregueroult.dev",
  sameAs: ["https://www.linkedin.com/in/pierregueroult", "https://github.com/pierregueroult"],
};

const works = await getCollection("works");
const schools = await getCollection("schools");
---

<Layout
  title="Web & Software Developer"
  description="20-year-old Web Developer & Computer Science Student passionate about building sleek, high-performance websites and automating workflows. Always exploring new technologies to solve problems and optimize efficiency."
>
  <Title />
  <h1 class="sr-only">Full-Stack Software Engineer - Pierre Guéroult - Paris, France</h1>
  <h2 class="leading-relaxed">
    20 year-old web developer & Computer Science Student. I love crafting sleek websites and automating workflows to
    make life easier. Passionate about clean code, problem-solving, and making tech work smarter, not harder. Always
    exploring new technologies, always up for a challenge. Whether it's web development, automation, or something
    completely out of my comfort zone - I'm in.
  </h2>
  <ListLayout title="Works">
    {works.map((work) => <WorkItem {work} />)}
  </ListLayout>
  <ListLayout title="Schools">
    {schools.map((school) => <SchoolItem {school} />)}
  </ListLayout>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd, null, 0)} />
</Layout>
