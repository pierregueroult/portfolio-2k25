---
import Layout from "../layouts/Layout.astro";
import Title from "../components/Title.astro";
import type { Person, WithContext } from "schema-dts";
import ListLayout from "../layouts/ListLayout.astro";
import { getCollection } from "astro:content";
import WorkItem from "../components/items/WorkItem.astro";
import SchoolItem from "../components/items/SchoolItem.astro";
import { SITE } from "../consts";
import { useTranslation } from "../i18n";
import CertificationItem from "../components/items/CertificationItem.astro";

const jsonLd: WithContext<Person> = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Pierre Guéroult",
  url: SITE,
  image: "TODO",
  jobTitle: "Software Developer Junior & CS Student",
  nationality: "French",
  address: {
    "@type": "PostalAddress",
    addressLocality: "Paris",
    addressRegion: "Île-de-France",
    addressCountry: "France",
  },
  alumniOf: {
    "@type": "CollegeOrUniversity",
    name: "IUT de Rouen",
  },
  email: "contact@pierregueroult.dev",
  sameAs: ["https://www.linkedin.com/in/pierregueroult", "https://github.com/pierregueroult"],
};

const works = await getCollection("works");
const schools = await getCollection("schools");
const certifications = await getCollection("certifications");

const t = useTranslation(Astro.locals.locale);

const cvPath = `/documents/pierre%20gueroult%20-%20curriculum%20vitae%20-%20${Astro.locals.locale === "fr" ? "fr" : "en"}.pdf`;
---

<Layout
  title={t("pages.index.meta.title")}
  description={t("pages.index.meta.description")}
  keywords={t("pages.index.meta.keywords").split(", ")}
>
  <Title />
  <h1 class="sr-only">
    {t("pages.index.title")}
  </h1>
  <h2 class="leading-relaxed text-sm md:text-base">
    {t("pages.index.subtitle")}
    <a href={`${cvPath}`} class=" relative underline text-accent-contrast font-semibold" target="_blank">
      {t("pages.index.curriculum")}
    </a>
  </h2>
  <ListLayout title={t("pages.index.works")}>
    {works.map((work) => <WorkItem {work} />)}
  </ListLayout>
  <ListLayout title={t("pages.index.schools")}>
    {schools.map((school) => <SchoolItem {school} />)}
  </ListLayout>
  <ListLayout title={t("pages.index.certifications")}>
    {certifications.map((certification) => <CertificationItem {certification} />)}
  </ListLayout>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonLd, null, 0)} />
</Layout>
