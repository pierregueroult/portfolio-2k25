---
import Layout from "../layouts/Layout.astro";
import Title from "../components/Title.astro";
import type { Person, WithContext } from "schema-dts";
import ListLayout from "../layouts/ListLayout.astro";
import { works, type Work } from "../data/works";
import { schools, type School } from "../data/schools";

const jsonld: WithContext<Person> = {
  "@context": "https://schema.org",
  "@type": "Person",
  name: "Pierre Guéroult",
  url: "https://pierregueroult.dev",
  image: "TODO",
  jobTitle: "Software Developer Junior & CS Student",
  nationality: "French",
  address: {
    "@type": "PostalAddress",
    addressLocality: "Paris",
    addressRegion: "Île-de-France",
    addressCountry: "France",
  },
  alumniOf: {
    "@type": "CollegeOrUniversity",
    name: "IUT de Rouen",
  },
  email: "contact@pierregueroult.dev",
  sameAs: ["https://www.linkedin.com/in/pierregueroult", "https://github.com/pierregueroult"],
};
---

<Layout
  title="Web & Software Developer"
  description="20-year-old Web Developer & Computer Science Student passionate about building sleek, high-performance websites and automating workflows. Always exploring new technologies to solve problems and optimize efficiency."
>
  <Title />
  <h1 class="sr-only">Full-Stack Software Engineer - Pierre Guéroult - Paris, France</h1>
  <h2 class="leading-relaxed">
    20 year-old web developer & Computer Science Student. I love crafting sleek websites and automating workflows to
    make life easier. Passionate about clean code, problem-solving, and making tech work smarter, not harder. Always
    exploring new technologies, always up for a challenge. Whether it's web development, automation, or something
    completely out of my comfort zone - I'm in.
  </h2>
  <ListLayout title="Works">
    {
      works.map((work: Work) => {
        if ("role" in work) {
          return (
            <li class="mt-4">
              <h3 class="text-sm lowercase">
                Looking for {work.role} near {work.place}
              </h3>
            </li>
          );
        }
        return (
          <li class="mt-4">
            <h3 class="text-lg">{work.place}</h3>
            <ul>
              {work.works.map((item) => (
                <li class="mt-2 first-of-type:mt-1">
                  <div class="text-foreground/60 text-sm flex gap-2">
                    <h4>- {item.role}</h4>
                    <p class="lowercase">
                      ( From
                      <date>{item.period[0].toLocaleDateString("en-US", { month: "long", year: "numeric" })}</date>
                      to
                      <date>
                        {item.period[1] === "now"
                          ? "right now"
                          : item.period[1].toLocaleDateString("en-US", { month: "long", year: "numeric" })}
                      </date>
                      )
                    </p>
                  </div>
                  <p class="text-sm">{item.description}</p>
                </li>
              ))}
            </ul>
          </li>
        );
      })
    }
  </ListLayout>
  <ListLayout title="Schools">
    {
      schools.map((school: School) => (
        <li class="mt-4">
          <h3 class="text-lg">{school.name}</h3>
          <div class="text-foreground/60 text-sm flex gap-2">
            <h4 class="text-foreground/60 text-sm">- {school.school} </h4>
            <p class="lowercase">
              ( from <date>{school.period[0].toLocaleDateString("en-US", { month: "long", year: "numeric" })}</date> to
              <date>
                {school.period[1] === "now"
                  ? "right now"
                  : school.period[1].toLocaleDateString("en-US", { month: "long", year: "numeric" })}
              </date>
              )
            </p>
          </div>
          <p class="text-sm">{school.description}</p>
        </li>
      ))
    }
  </ListLayout>
  <script type="application/ld+json" is:inline set:html={JSON.stringify(jsonld, null, 0)} />
</Layout>
