---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import ListLayout from "../layouts/ListLayout.astro";
import WithTitleLayout from "../layouts/WithTitleLayout.astro";
import SocialItem from "../components/items/SocialItem.astro";
import { useTranslation } from "../i18n";
import FormLayout from "../layouts/FormLayout.astro";
import Contact from "../components/Contact.astro";

const allSocials = await getCollection("socials");

const featured = allSocials.filter((social) => social.data.isFeatured);
const socials = allSocials.filter((social) => !social.data.isFeatured);

const t = useTranslation(Astro.locals.locale);
---

<Layout
  title={t("pages.socials.meta.title")}
  description={t("pages.socials.meta.description")}
  keywords={t("pages.socials.meta.keywords").split(", ")}
>
  
  <WithTitleLayout title={t("pages.socials.title")} subtitle={t("pages.socials.subtitle")}>
    <FormLayout title={t("pages.socials.contact.title")} subtitle={t("pages.socials.contact.description")}>
      <Contact />
    </FormLayout>
    {
      featured.length > 0 && (
        <ListLayout title={t("pages.socials.featured")}>
          {featured.map((social) => (
            <SocialItem
              link={social.data.link}
              title={social.data.title}
              description={social.data.description[Astro.locals.locale]}
            />
          ))}
        </ListLayout>
      )
    }
    {
      socials.length > 0 && (
        <ListLayout title={t("pages.socials.links")}>
          {socials.map((social) => (
            <SocialItem
              link={social.data.link}
              title={social.data.title}
              description={social.data.description[Astro.locals.locale]}
            />
          ))}
        </ListLayout>
      )
    }
  </WithTitleLayout>
</Layout>
