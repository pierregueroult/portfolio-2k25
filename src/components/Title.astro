---
const letters: string[] = ["P", "i", "e", "r", "r", "e", " ", "G", "u", "e", "r", "o", "u", "l", "t"];
---

<div
  class="font-accent text-[0rem] uppercase text-center sm:flex sm:items-center w-full overflow-hidden sm:justify-center max-h-[70vw] sm:max-h-auto"
  data-title-container
  dir="ltr"
>
  {
    letters.map((letter) => (
      <>
        {/* prettier-ignore */}
        <span class={`transition-opacity leading-[35vw] sm:leading-none text-[40vw] sm:text-[30vw] lg:text-[19rem] letter opacity-0 text-foreground ${letter === " " ? "min-w-[0.5ch]" : ""}`} style={`animation-delay: ${Math.random() * 0.5}s`}>{letter}</span>
        {letter === " " && <br />}
      </>
    ))
  }
</div>

<style>
  @keyframes letter-enter-scale {
    0% {
      opacity: 1;
      transform: scaleY(0);
    }
    100% {
      opacity: 1;
      transform: scaleY(1);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    [data-title-ready] .letter {
      animation: none;
    }
  }

  @media screen and (max-width: 639px) {
    [data-title-ready] .letter {
      opacity: 1 !important;
    }
  }

  @media screen and (min-width: 640px) {
    [data-title-ready] .letter {
      animation: letter-enter-scale 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    }
  }
</style>

<script>
  import FontFaceObserver from "fontfaceobserver";

  document.addEventListener("astro:page-load", () => {
    const font = new FontFaceObserver("Dimensions");
    const container = document.querySelector("[data-title-container]");

    font
      .load()
      .then(() => {
        if (container) container.setAttribute("data-title-ready", "");
      })
      .catch(() => {
        console.log("Font could not be loaded");
      });
  });
</script>
