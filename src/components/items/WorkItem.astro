---
import type { CollectionEntry } from "astro:content";
import { useTranslation } from "../../i18n";
import { getLocale } from "@/utils/get-locale";

interface Props {
  work: CollectionEntry<"works">;
}
const { work } = Astro.props;
const locale = getLocale(Astro.params.lang);
const t = useTranslation(locale);
---

{
  "role" in work.data ? (
    <li class="mt-4">
      <h3 class="text-sm lowercase">
        <span class="text-accent">‚îÅ</span>
        {" " + t("components.items.work.looking") + " "}
        {work.data.role[locale] + " "}
        {t("components.items.work.near") + " "}
        {work.data.place}
      </h3>
    </li>
  ) : (
    <li class="mt-4">
      <h3 class="text-lg">{work.data.place}</h3>
      <ul>
        {work.data.works.map((item) => (
          <li class="mt-2 first-of-type:mt-1">
            <div class="text-foreground/70 text-sm">
              <h4 class="inline-block">- {item.role[locale]}</h4>
              <p class="lowercase inline-block ml-[1ch]">
                <span>({t("components.items.from")}</span>{" "}
                <date>{item.period[0].toLocaleDateString(locale, { month: "long", year: "numeric" })}</date>{" "}
                <span>{t("components.items.to")}</span>{" "}
                <date>
                  {item.period[1] === "now"
                    ? t("components.items.now")
                    : item.period[1].toLocaleDateString(locale, { month: "long", year: "numeric" })}
                </date>
                <span>)</span>
              </p>
            </div>
            <p class="text-sm">{item.description[locale]}</p>
          </li>
        ))}
      </ul>
    </li>
  )
}
